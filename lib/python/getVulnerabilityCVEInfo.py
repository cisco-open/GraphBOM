# MIT License

# Copyright (c) 2024 Cisco Systems, Inc. and its affiliates

# Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the “Software”), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:

# The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.

# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.


from python import DatabaseConnection as dbc
# import DatabaseConnection as dbc
"""
This file return the CVE IDs from the database 
"""

def updateCVEDB(records):
    conn,curr = dbc.getDatabaseConection()
    #truncate staging table
    query = "truncate table stage_scan_vuln";
    curr.execute(query)
    res1 = curr.fetchall()
    query_vlun = "select * from scan_vuln";
    curr.execute(query_vlun)
    res2 = curr.fetchall()
    if len(res1) == 0 and len(res2) == 0:
        try:
            insert_query = """INSERT INTO stage_scan_vuln (cve_id, source_url, severity_level, description) VALUES (%s, %s, %s, %s)"""
            curr.executemany(insert_query, records)
            conn.commit()
            insert_query = """INSERT INTO scan_vuln (cve_id, source_url, severity_level, description) VALUES (%s, %s, %s, %s)"""
            curr.executemany(insert_query, records)
            conn.commit()
        except ValueError as e:
            print(e)
    elif len(res1) == 0 and len(res2) > 0:
        try:
            insert_query = """INSERT INTO stage_scan_vuln (cve_id, source_url, severity_level, description) VALUES (%s, %s, %s, %s)"""
            curr.executemany(insert_query, records)
            conn.commit()
            update_query = """INSERT INTO scan_vuln (cve_id, source_url, severity_level, description)
                              SELECT ssv.cve_id, ssv.source_url , ssv.severity_level , ssv.description FROM stage_scan_vuln ssv 
                              LEFT JOIN scan_vuln sv
                              on ssv.cve_id = sv.cve_id 
                              WHERE sv.cve_id IS NULL"""
            curr.execute(update_query)
            conn.commit()
        except ValueError as e:
            print(e)
    return None
